# Contract address as ID
type Contract @entity {
  id: ID! 
  numChallenges: BigInt!
  numChallengers: BigInt!
  numVideos: BigInt!
  totalFund: BigInt!
}

# ChallengId as ID
type Challenge @entity {
  #########################
  # set during creation
  #########################
  id: ID!
  creator: Bytes!
  startTxnHash: String!
  startTimestamp: BigInt!
  title: String
  description: String
  beneficiary: Bytes!
  isPublic: Boolean
  endTimestamp: BigInt!
  minEntryFee: BigInt!
  #########################
  # mutable
  #########################
  videos: [Video!]! @derivedFrom(field: "challenge")
  invitedAddresses: [Account!]
  challengers: [Account!]! @derivedFrom(field: challenges")
  numChallengers: BigInt!
  totalFund: BigInt!
  resolveTimestamp: BigInt # null means still ongoing
  resolveTxnHash: String
  winner: Account
  isActive: Boolean
}

# Account eth address as ID
type Account @entity {
  id: ID!
  numChallenges: BigInt!
  challenges: [Challenge!]
  totalFund: BigInt!
  wins: [Challenge!]
}

# Video IPFS Hash as ID
type Video @entity {
  id: ID!
  creator: Bytes!
  challenge: Challenge!
  uploadTxnHash: String!
  uploadTimestamp: BigInt!
}

# Lowercase Tags name as ID
type Tags @entity {
  id: ID!
  numVideos: BigInt!
  numChallenges: BigInt!
#  challenge: [Challenge] @derivedFrom(field: "tag")
#  videos: [Video] @derivedFrom(field: "tag")
}